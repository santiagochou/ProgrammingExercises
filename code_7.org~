* 面试题 04.02. 最小高度树
** ref: https://leetcode-cn.com/problems/minimum-height-tree-lcci/
给定一个有序整数数组，元素各不相同且按升序排列，编写一个算法，创建一棵高度最小的二叉搜索树。

示例:
给定有序数组: [-10,-3,0,5,9],

一个可能的答案是：[0,-3,9,-10,null,5]，它可以表示下面这个高度平衡二叉搜索树：

          0 
         / \ 
       -3   9 
       /   / 
     -10  5 

** 使用递归来实现
** 平衡二叉树，每次获取中间的节点。再二分数组左右两边的子集到左右子树
** 用的是前序遍历

* Solution:
#+BEGIN_SRC C++
       
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void sortedArrayToBSTHelper(vector<int>& nums, TreeNode*& head, int begin, int end){
        
        if(begin > end){
            // basic case
            //do nothing.
        } else{
            // nomal case
            int mid = (begin+end)/2;
            TreeNode* newNode = new TreeNode(nums.at(mid));
            head = newNode;
            sortedArrayToBSTHelper(nums, head->left, begin, mid-1);
            sortedArrayToBSTHelper(nums, head->right, mid+1, end);

        }
        
    }
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        TreeNode* head = NULL;
        int begin =0, end = nums.size() -1;
        sortedArrayToBSTHelper(nums, head, begin, end);
        return head;
    }
};
#+END_SRC
